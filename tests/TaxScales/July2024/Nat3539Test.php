<?php

namespace ManageIt\PaygTax\Tests\TaxScales\July2024;

use ManageIt\PaygTax\PaygTax;
use ManageIt\PaygTax\Tests\Fixtures\Earning;
use ManageIt\PaygTax\Tests\Fixtures\Payee;
use ManageIt\PaygTax\Tests\Fixtures\Payer;
use PHPUnit\Framework\TestCase;
use PHPUnit\Framework\Assert;

/**
 * @covers \ManageIt\PaygTax\TaxScales\Nat3539
 */
class Nat3539Test extends TestCase
{
    /**
     * @dataProvider weeklyData
     */
    public function testWeeklyWithholding(
        int $gross,
        float $scale1,
        float $scale2,
        float $scale3,
        float $scale5,
        float $scale6
    ): void {
        $payer = new Payer();

        $payee = new Payee();
        $payee->payCycle = Payee::PAY_CYCLE_WEEKLY;
        $payee->residencyStatus = Payee::RESIDENT;
        $payee->tfn = true;
        $payee->claimsTaxFreeThreshold = false;
        $payee->stsl = true;

        $earning = new Earning();
        $earning->date = new \DateTime('2024-07-15');
        $earning->gross = $gross;

        // Scale 1

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale1, $payg->getTaxWithheldAmount());

        // Scale 2

        $payee->claimsTaxFreeThreshold = true;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale2, $payg->getTaxWithheldAmount());

        // Scale 3

        $payee->residencyStatus = Payee::FOREIGN_RESIDENT;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale3, $payg->getTaxWithheldAmount());

        // Scale 5

        $payee->residencyStatus = Payee::RESIDENT;
        $payee->medicareLevyExemption = Payee::MEDICARE_LEVY_EXEMPTION_FULL;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale5, $payg->getTaxWithheldAmount());

        // Scale 6

        $payee->medicareLevyExemption = Payee::MEDICARE_LEVY_EXEMPTION_HALF;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale6, $payg->getTaxWithheldAmount());
    }

    /**
     * @return array<int, array<int|float, int|float>>
     */
    public function weeklyData(): array
    {
        return [
            [116, 19.00, 0.00, 35.00, 0.00, 0.00],
            [117, 19.00, 0.00, 35.00, 0.00, 0.00],
            [149, 24.00, 0.00, 45.00, 0.00, 0.00],
            [150, 24.00, 0.00, 45.00, 0.00, 0.00],
            [249, 45.00, 0.00, 75.00, 0.00, 0.00],
            [250, 45.00, 0.00, 75.00, 0.00, 0.00],
            [360, 69.00, 0.00, 108.00, 0.00, 0.00],
            [361, 69.00, 0.00, 108.00, 0.00, 0.00],
            [370, 71.00, 2.00, 111.00, 2.00, 2.00],
            [371, 71.00, 2.00, 111.00, 2.00, 2.00],
            [499, 95.00, 22.00, 150.00, 22.00, 22.00],
            [500, 95.00, 22.00, 150.00, 22.00, 22.00],
            [514, 98.00, 26.00, 154.00, 25.00, 25.00],
            [515, 98.00, 26.00, 154.00, 25.00, 25.00],
            [624, 133.00, 55.00, 187.00, 42.00, 42.00],
            [625, 134.00, 55.00, 187.00, 42.00, 42.00],
            [695, 156.00, 67.00, 208.00, 54.00, 54.00],
            [696, 164.00, 68.00, 209.00, 54.00, 54.00],
            [720, 172.00, 72.00, 216.00, 58.00, 58.00],
            [721, 172.00, 72.00, 216.00, 58.00, 58.00],
            [842, 212.00, 95.00, 253.00, 78.00, 78.00],
            [843, 213.00, 95.00, 253.00, 78.00, 78.00],
            [858, 226.00, 98.00, 257.00, 81.00, 82.00],
            [859, 226.00, 98.00, 258.00, 81.00, 82.00],
            [864, 228.00, 99.00, 259.00, 82.00, 83.00],
            [865, 229.00, 99.00, 259.00, 82.00, 83.00],
            [930, 251.00, 120.00, 279.00, 102.00, 106.00],
            [931, 256.00, 121.00, 279.00, 102.00, 107.00],
            [1007, 282.00, 145.00, 302.00, 125.00, 133.00],
            [1008, 287.00, 146.00, 302.00, 125.00, 134.00],
            [1045, 300.00, 158.00, 313.00, 137.00, 147.00],
            [1046, 301.00, 168.00, 324.00, 147.00, 158.00],
            [1052, 303.00, 170.00, 326.00, 149.00, 160.00],
            [1053, 303.00, 171.00, 326.00, 150.00, 160.00],
            [1088, 315.00, 182.00, 337.00, 160.00, 171.00],
            [1089, 321.00, 183.00, 338.00, 161.00, 172.00],
            [1174, 351.00, 211.00, 364.00, 187.00, 199.00],
            [1175, 358.00, 211.00, 364.00, 188.00, 199.00],
            [1207, 369.00, 222.00, 374.00, 198.00, 210.00],
            [1208, 370.00, 234.00, 387.00, 210.00, 222.00],
            [1266, 390.00, 254.00, 405.00, 229.00, 241.00],
            [1267, 397.00, 255.00, 405.00, 229.00, 242.00],
            [1281, 402.00, 266.00, 416.00, 240.00, 253.00],
            [1357, 430.00, 292.00, 441.00, 265.00, 278.00],
            [1358, 430.00, 299.00, 448.00, 272.00, 285.00],
            [1363, 432.00, 301.00, 450.00, 274.00, 287.00],
            [1364, 439.00, 301.00, 450.00, 274.00, 288.00],
            [1366, 440.00, 302.00, 451.00, 275.00, 288.00],
            [1438, 467.00, 327.00, 475.00, 298.00, 313.00],
            [1439, 467.00, 335.00, 482.00, 306.00, 320.00],
            [1467, 485.00, 345.00, 491.00, 315.00, 330.00],
            [1524, 506.00, 365.00, 511.00, 334.00, 350.00],
            [1525, 507.00, 373.00, 519.00, 342.00, 358.00],
            [1575, 525.00, 391.00, 536.00, 359.00, 375.00],
            [1576, 534.00, 391.00, 536.00, 360.00, 375.00],
            [1616, 549.00, 406.00, 549.00, 373.00, 389.00],
            [1617, 549.00, 414.00, 558.00, 382.00, 398.00],
            [1691, 577.00, 441.00, 583.00, 407.00, 424.00],
            [1692, 586.00, 441.00, 584.00, 408.00, 424.00],
            [1713, 594.00, 449.00, 591.00, 415.00, 432.00],
            [1714, 595.00, 458.00, 600.00, 424.00, 441.00],
            [1813, 633.00, 495.00, 635.00, 458.00, 476.00],
            [1814, 642.00, 495.00, 635.00, 459.00, 477.00],
            [1816, 643.00, 496.00, 636.00, 459.00, 478.00],
            [1817, 643.00, 505.00, 645.00, 469.00, 487.00],
            [1844, 654.00, 515.00, 655.00, 478.00, 497.00],
            [1845, 654.00, 516.00, 655.00, 479.00, 497.00],
            [1925, 685.00, 546.00, 683.00, 507.00, 526.00],
            [1926, 686.00, 556.00, 693.00, 517.00, 536.00],
            [1943, 692.00, 562.00, 700.00, 523.00, 543.00],
            [1944, 703.00, 563.00, 700.00, 524.00, 543.00],
            [2041, 741.00, 599.00, 735.00, 559.00, 579.00],
            [2042, 741.00, 610.00, 745.00, 569.00, 590.00],
            [2081, 757.00, 625.00, 760.00, 583.00, 604.00],
            [2082, 767.00, 625.00, 760.00, 584.00, 605.00],
            [2119, 782.00, 640.00, 773.00, 597.00, 618.00],
            [2120, 783.00, 640.00, 774.00, 598.00, 619.00],
            [2163, 800.00, 657.00, 790.00, 613.00, 635.00],
            [2164, 800.00, 668.00, 801.00, 624.00, 646.00],
            [2227, 825.00, 692.00, 824.00, 648.00, 670.00],
            [2228, 837.00, 693.00, 824.00, 648.00, 670.00],
            [2245, 844.00, 699.00, 831.00, 654.00, 677.00],
            [2246, 844.00, 700.00, 831.00, 655.00, 677.00],
            [2293, 867.00, 718.00, 848.00, 672.00, 695.00],
            [2294, 867.00, 730.00, 860.00, 684.00, 707.00],
            [2381, 908.00, 764.00, 893.00, 717.00, 740.00],
            [2382, 921.00, 765.00, 893.00, 717.00, 741.00],
            [2431, 944.00, 784.00, 912.00, 735.00, 760.00],
            [2432, 945.00, 797.00, 924.00, 748.00, 772.00],
            [2490, 973.00, 820.00, 946.00, 770.00, 795.00],
            [2491, 973.00, 820.00, 947.00, 770.00, 795.00],
            [2545, 999.00, 842.00, 967.00, 791.00, 816.00],
            [2546, 1012.00, 842.00, 968.00, 791.00, 817.00],
            [2577, 1027.00, 855.00, 979.00, 803.00, 829.00],
            [2578, 1028.00, 868.00, 993.00, 816.00, 842.00],
            [2595, 1036.00, 875.00, 999.00, 823.00, 849.00],
            [2596, 1037.00, 875.00, 1000.00, 823.00, 849.00],
            [2652, 1064.00, 902.00, 1025.00, 849.00, 875.00],
            [2653, 1064.00, 902.00, 1026.00, 849.00, 876.00],
            [2719, 1096.00, 934.00, 1056.00, 879.00, 906.00],
            [2720, 1110.00, 934.00, 1056.00, 880.00, 907.00],
            [2731, 1116.00, 939.00, 1061.00, 885.00, 912.00],
            [2732, 1116.00, 954.00, 1075.00, 899.00, 926.00],
            [2736, 1118.00, 955.00, 1077.00, 901.00, 928.00],
            [2737, 1119.00, 956.00, 1078.00, 901.00, 929.00],
            [2895, 1196.00, 1032.00, 1150.00, 974.00, 1003.00],
            [2896, 1197.00, 1047.00, 1165.00, 989.00, 1018.00],
            [2898, 1198.00, 1048.00, 1166.00, 990.00, 1019.00],
            [2899, 1198.00, 1048.00, 1167.00, 990.00, 1019.00],
            [3069, 1281.00, 1131.00, 1246.00, 1069.00, 1100.00],
            [3070, 1282.00, 1146.00, 1262.00, 1085.00, 1116.00],
            [3302, 1396.00, 1260.00, 1371.00, 1194.00, 1227.00],
            [3303, 1396.00, 1261.00, 1371.00, 1195.00, 1228.00],
            [3652, 1595.00, 1432.00, 1535.00, 1359.00, 1395.00],
            [3653, 1596.00, 1432.00, 1536.00, 1359.00, 1396.00],
        ];
    }

    /**
     * @dataProvider fortnightlyData
     */
    public function testFortnightlyWithholding(
        int $gross,
        float $scale1,
        float $scale2,
        float $scale3,
        float $scale5,
        float $scale6
    ): void {
        $payer = new Payer();

        $payee = new Payee();
        $payee->payCycle = Payee::PAY_CYCLE_FORTNIGHTLY;
        $payee->residencyStatus = Payee::RESIDENT;
        $payee->tfn = true;
        $payee->claimsTaxFreeThreshold = false;
        $payee->stsl = true;

        $earning = new Earning();
        $earning->date = new \DateTime('2024-07-15');
        $earning->gross = $gross;

        // Scale 1

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale1, $payg->getTaxWithheldAmount());

        // Scale 2

        $payee->claimsTaxFreeThreshold = true;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale2, $payg->getTaxWithheldAmount());

        // Scale 3

        $payee->residencyStatus = Payee::FOREIGN_RESIDENT;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale3, $payg->getTaxWithheldAmount());

        // Scale 5

        $payee->residencyStatus = Payee::RESIDENT;
        $payee->medicareLevyExemption = Payee::MEDICARE_LEVY_EXEMPTION_FULL;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale5, $payg->getTaxWithheldAmount());

        // Scale 6

        $payee->medicareLevyExemption = Payee::MEDICARE_LEVY_EXEMPTION_HALF;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale6, $payg->getTaxWithheldAmount());
    }

    /**
     * @return array<int, array<int|float, int|float>>
     */
    public function fortnightlyData(): array
    {
        return [
            [232, 38.00, 0.00, 70.00, 0.00, 0.00],
            [234, 38.00, 0.00, 70.00, 0.00, 0.00],
            [298, 48.00, 0.00, 90.00, 0.00, 0.00],
            [300, 48.00, 0.00, 90.00, 0.00, 0.00],
            [498, 90.00, 0.00, 150.00, 0.00, 0.00],
            [500, 90.00, 0.00, 150.00, 0.00, 0.00],
            [720, 138.00, 0.00, 216.00, 0.00, 0.00],
            [722, 138.00, 0.00, 216.00, 0.00, 0.00],
            [740, 142.00, 4.00, 222.00, 4.00, 4.00],
            [742, 142.00, 4.00, 222.00, 4.00, 4.00],
            [998, 190.00, 44.00, 300.00, 44.00, 44.00],
            [1000, 190.00, 44.00, 300.00, 44.00, 44.00],
            [1028, 196.00, 52.00, 308.00, 50.00, 50.00],
            [1030, 196.00, 52.00, 308.00, 50.00, 50.00],
            [1248, 266.00, 110.00, 374.00, 84.00, 84.00],
            [1250, 268.00, 110.00, 374.00, 84.00, 84.00],
            [1390, 312.00, 134.00, 416.00, 108.00, 108.00],
            [1392, 328.00, 136.00, 418.00, 108.00, 108.00],
            [1440, 344.00, 144.00, 432.00, 116.00, 116.00],
            [1442, 344.00, 144.00, 432.00, 116.00, 116.00],
            [1684, 424.00, 190.00, 506.00, 156.00, 156.00],
            [1686, 426.00, 190.00, 506.00, 156.00, 156.00],
            [1716, 452.00, 196.00, 514.00, 162.00, 164.00],
            [1718, 452.00, 196.00, 516.00, 162.00, 164.00],
            [1728, 456.00, 198.00, 518.00, 164.00, 166.00],
            [1730, 458.00, 198.00, 518.00, 164.00, 166.00],
            [1860, 502.00, 240.00, 558.00, 204.00, 212.00],
            [1862, 512.00, 242.00, 558.00, 204.00, 214.00],
            [2014, 564.00, 290.00, 604.00, 250.00, 266.00],
            [2016, 574.00, 292.00, 604.00, 250.00, 268.00],
            [2090, 600.00, 316.00, 626.00, 274.00, 294.00],
            [2092, 602.00, 336.00, 648.00, 294.00, 316.00],
            [2104, 606.00, 340.00, 652.00, 298.00, 320.00],
            [2106, 606.00, 342.00, 652.00, 300.00, 320.00],
            [2176, 630.00, 364.00, 674.00, 320.00, 342.00],
            [2178, 642.00, 366.00, 676.00, 322.00, 344.00],
            [2348, 702.00, 422.00, 728.00, 374.00, 398.00],
            [2350, 716.00, 422.00, 728.00, 376.00, 398.00],
            [2414, 738.00, 444.00, 748.00, 396.00, 420.00],
            [2416, 740.00, 468.00, 774.00, 420.00, 444.00],
            [2532, 780.00, 508.00, 810.00, 458.00, 482.00],
            [2534, 794.00, 510.00, 810.00, 458.00, 484.00],
            [2562, 804.00, 532.00, 832.00, 480.00, 506.00],
            [2714, 860.00, 584.00, 882.00, 530.00, 556.00],
            [2716, 860.00, 598.00, 896.00, 544.00, 570.00],
            [2726, 864.00, 602.00, 900.00, 548.00, 574.00],
            [2728, 878.00, 602.00, 900.00, 548.00, 576.00],
            [2732, 880.00, 604.00, 902.00, 550.00, 576.00],
            [2876, 934.00, 654.00, 950.00, 596.00, 626.00],
            [2878, 934.00, 670.00, 964.00, 612.00, 640.00],
            [2934, 970.00, 690.00, 982.00, 630.00, 660.00],
            [3048, 1012.00, 730.00, 1022.00, 668.00, 700.00],
            [3050, 1014.00, 746.00, 1038.00, 684.00, 716.00],
            [3150, 1050.00, 782.00, 1072.00, 718.00, 750.00],
            [3152, 1068.00, 782.00, 1072.00, 720.00, 750.00],
            [3232, 1098.00, 812.00, 1098.00, 746.00, 778.00],
            [3234, 1098.00, 828.00, 1116.00, 764.00, 796.00],
            [3382, 1154.00, 882.00, 1166.00, 814.00, 848.00],
            [3384, 1172.00, 882.00, 1168.00, 816.00, 848.00],
            [3426, 1188.00, 898.00, 1182.00, 830.00, 864.00],
            [3428, 1190.00, 916.00, 1200.00, 848.00, 882.00],
            [3626, 1266.00, 990.00, 1270.00, 916.00, 952.00],
            [3628, 1284.00, 990.00, 1270.00, 918.00, 954.00],
            [3632, 1286.00, 992.00, 1272.00, 918.00, 956.00],
            [3634, 1286.00, 1010.00, 1290.00, 938.00, 974.00],
            [3688, 1308.00, 1030.00, 1310.00, 956.00, 994.00],
            [3690, 1308.00, 1032.00, 1310.00, 958.00, 994.00],
            [3850, 1370.00, 1092.00, 1366.00, 1014.00, 1052.00],
            [3852, 1372.00, 1112.00, 1386.00, 1034.00, 1072.00],
            [3886, 1384.00, 1124.00, 1400.00, 1046.00, 1086.00],
            [3888, 1406.00, 1126.00, 1400.00, 1048.00, 1086.00],
            [4082, 1482.00, 1198.00, 1470.00, 1118.00, 1158.00],
            [4084, 1482.00, 1220.00, 1490.00, 1138.00, 1180.00],
            [4162, 1514.00, 1250.00, 1520.00, 1166.00, 1208.00],
            [4164, 1534.00, 1250.00, 1520.00, 1168.00, 1210.00],
            [4238, 1564.00, 1280.00, 1546.00, 1194.00, 1236.00],
            [4240, 1566.00, 1280.00, 1548.00, 1196.00, 1238.00],
            [4326, 1600.00, 1314.00, 1580.00, 1226.00, 1270.00],
            [4328, 1600.00, 1336.00, 1602.00, 1248.00, 1292.00],
            [4454, 1650.00, 1384.00, 1648.00, 1296.00, 1340.00],
            [4456, 1674.00, 1386.00, 1648.00, 1296.00, 1340.00],
            [4490, 1688.00, 1398.00, 1662.00, 1308.00, 1354.00],
            [4492, 1688.00, 1400.00, 1662.00, 1310.00, 1354.00],
            [4586, 1734.00, 1436.00, 1696.00, 1344.00, 1390.00],
            [4588, 1734.00, 1460.00, 1720.00, 1368.00, 1414.00],
            [4762, 1816.00, 1528.00, 1786.00, 1434.00, 1480.00],
            [4764, 1842.00, 1530.00, 1786.00, 1434.00, 1482.00],
            [4862, 1888.00, 1568.00, 1824.00, 1470.00, 1520.00],
            [4864, 1890.00, 1594.00, 1848.00, 1496.00, 1544.00],
            [4980, 1946.00, 1640.00, 1892.00, 1540.00, 1590.00],
            [4982, 1946.00, 1640.00, 1894.00, 1540.00, 1590.00],
            [5090, 1998.00, 1684.00, 1934.00, 1582.00, 1632.00],
            [5092, 2024.00, 1684.00, 1936.00, 1582.00, 1634.00],
            [5154, 2054.00, 1710.00, 1958.00, 1606.00, 1658.00],
            [5156, 2056.00, 1736.00, 1986.00, 1632.00, 1684.00],
            [5190, 2072.00, 1750.00, 1998.00, 1646.00, 1698.00],
            [5192, 2074.00, 1750.00, 2000.00, 1646.00, 1698.00],
            [5304, 2128.00, 1804.00, 2050.00, 1698.00, 1750.00],
            [5306, 2128.00, 1804.00, 2052.00, 1698.00, 1752.00],
            [5438, 2192.00, 1868.00, 2112.00, 1758.00, 1812.00],
            [5440, 2220.00, 1868.00, 2112.00, 1760.00, 1814.00],
            [5462, 2232.00, 1878.00, 2122.00, 1770.00, 1824.00],
            [5464, 2232.00, 1908.00, 2150.00, 1798.00, 1852.00],
            [5472, 2236.00, 1910.00, 2154.00, 1802.00, 1856.00],
            [5474, 2238.00, 1912.00, 2156.00, 1802.00, 1858.00],
            [5790, 2392.00, 2064.00, 2300.00, 1948.00, 2006.00],
            [5792, 2394.00, 2094.00, 2330.00, 1978.00, 2036.00],
            [5796, 2396.00, 2096.00, 2332.00, 1980.00, 2038.00],
            [5798, 2396.00, 2096.00, 2334.00, 1980.00, 2038.00],
            [6138, 2562.00, 2262.00, 2492.00, 2138.00, 2200.00],
            [6140, 2564.00, 2292.00, 2524.00, 2170.00, 2232.00],
            [6604, 2792.00, 2520.00, 2742.00, 2388.00, 2454.00],
            [6606, 2792.00, 2522.00, 2742.00, 2390.00, 2456.00],
            [7304, 3190.00, 2864.00, 3070.00, 2718.00, 2790.00],
            [7306, 3192.00, 2864.00, 3072.00, 2718.00, 2792.00],
        ];
    }

    /**
     * @dataProvider monthlyData
     */
    public function testMonthlyWithholding(
        float $gross,
        float $scale1,
        float $scale2,
        float $scale3,
        float $scale5,
        float $scale6
    ): void {
        $payer = new Payer();

        $payee = new Payee();
        $payee->payCycle = Payee::PAY_CYCLE_MONTHLY;
        $payee->residencyStatus = Payee::RESIDENT;
        $payee->tfn = true;
        $payee->claimsTaxFreeThreshold = false;
        $payee->stsl = true;

        $earning = new Earning();
        $earning->date = new \DateTime('2024-07-15');
        $earning->gross = $gross;

        // Scale 1

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale1, $payg->getTaxWithheldAmount());

        // Scale 2

        $payee->claimsTaxFreeThreshold = true;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale2, $payg->getTaxWithheldAmount());

        // Scale 3

        $payee->residencyStatus = Payee::FOREIGN_RESIDENT;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale3, $payg->getTaxWithheldAmount());

        // Scale 5

        $payee->residencyStatus = Payee::RESIDENT;
        $payee->medicareLevyExemption = Payee::MEDICARE_LEVY_EXEMPTION_FULL;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale5, $payg->getTaxWithheldAmount());

        // Scale 6

        $payee->medicareLevyExemption = Payee::MEDICARE_LEVY_EXEMPTION_HALF;

        $payg = PaygTax::new()
            ->setPayer($payer)
            ->setPayee($payee)
            ->setEarning($earning);

        Assert::assertEquals($scale6, $payg->getTaxWithheldAmount());
    }

    /**
     * @return array<int, array<int|float, int|float>>
     */
    public function monthlyData(): array
    {
        return [
            [502.67, 82.00, 0.00, 152.00, 0.00, 0.00],
            [507.00, 82.00, 0.00, 152.00, 0.00, 0.00],
            [645.67, 104.00, 0.00, 195.00, 0.00, 0.00],
            [650.00, 104.00, 0.00, 195.00, 0.00, 0.00],
            [1079.00, 195.00, 0.00, 325.00, 0.00, 0.00],
            [1083.33, 195.00, 0.00, 325.00, 0.00, 0.00],
            [1560.00, 299.00, 0.00, 468.00, 0.00, 0.00],
            [1564.33, 299.00, 0.00, 468.00, 0.00, 0.00],
            [1603.33, 308.00, 9.00, 481.00, 9.00, 9.00],
            [1607.67, 308.00, 9.00, 481.00, 9.00, 9.00],
            [2162.33, 412.00, 95.00, 650.00, 95.00, 95.00],
            [2166.67, 412.00, 95.00, 650.00, 95.00, 95.00],
            [2227.33, 425.00, 113.00, 667.00, 108.00, 108.00],
            [2231.67, 425.00, 113.00, 667.00, 108.00, 108.00],
            [2704.00, 576.00, 238.00, 810.00, 182.00, 182.00],
            [2708.33, 581.00, 238.00, 810.00, 182.00, 182.00],
            [3011.67, 676.00, 290.00, 901.00, 234.00, 234.00],
            [3016.00, 711.00, 295.00, 906.00, 234.00, 234.00],
            [3120.00, 745.00, 312.00, 936.00, 251.00, 251.00],
            [3124.33, 745.00, 312.00, 936.00, 251.00, 251.00],
            [3648.67, 919.00, 412.00, 1096.00, 338.00, 338.00],
            [3653.00, 923.00, 412.00, 1096.00, 338.00, 338.00],
            [3718.00, 979.00, 425.00, 1114.00, 351.00, 355.00],
            [3722.33, 979.00, 425.00, 1118.00, 351.00, 355.00],
            [3744.00, 988.00, 429.00, 1122.00, 355.00, 360.00],
            [3748.33, 992.00, 429.00, 1122.00, 355.00, 360.00],
            [4030.00, 1088.00, 520.00, 1209.00, 442.00, 459.00],
            [4034.33, 1109.00, 524.00, 1209.00, 442.00, 464.00],
            [4363.67, 1222.00, 628.00, 1309.00, 542.00, 576.00],
            [4368.00, 1244.00, 633.00, 1309.00, 542.00, 581.00],
            [4528.33, 1300.00, 685.00, 1356.00, 594.00, 637.00],
            [4532.67, 1304.00, 728.00, 1404.00, 637.00, 685.00],
            [4558.67, 1313.00, 737.00, 1413.00, 646.00, 693.00],
            [4563.00, 1313.00, 741.00, 1413.00, 650.00, 693.00],
            [4714.67, 1365.00, 789.00, 1460.00, 693.00, 741.00],
            [4719.00, 1391.00, 793.00, 1465.00, 698.00, 745.00],
            [5087.33, 1521.00, 914.00, 1577.00, 810.00, 862.00],
            [5091.67, 1551.00, 914.00, 1577.00, 815.00, 862.00],
            [5230.33, 1599.00, 962.00, 1621.00, 858.00, 910.00],
            [5234.67, 1603.00, 1014.00, 1677.00, 910.00, 962.00],
            [5486.00, 1690.00, 1101.00, 1755.00, 992.00, 1044.00],
            [5490.33, 1720.00, 1105.00, 1755.00, 992.00, 1049.00],
            [5551.00, 1742.00, 1153.00, 1803.00, 1040.00, 1096.00],
            [5880.33, 1863.00, 1265.00, 1911.00, 1148.00, 1205.00],
            [5884.67, 1863.00, 1296.00, 1941.00, 1179.00, 1235.00],
            [5906.33, 1872.00, 1304.00, 1950.00, 1187.00, 1244.00],
            [5910.67, 1902.00, 1304.00, 1950.00, 1187.00, 1248.00],
            [5919.33, 1907.00, 1309.00, 1954.00, 1192.00, 1248.00],
            [6231.33, 2024.00, 1417.00, 2058.00, 1291.00, 1356.00],
            [6235.67, 2024.00, 1452.00, 2089.00, 1326.00, 1387.00],
            [6357.00, 2102.00, 1495.00, 2128.00, 1365.00, 1430.00],
            [6604.00, 2193.00, 1582.00, 2214.00, 1447.00, 1517.00],
            [6608.33, 2197.00, 1616.00, 2249.00, 1482.00, 1551.00],
            [6825.00, 2275.00, 1694.00, 2323.00, 1556.00, 1625.00],
            [6829.33, 2314.00, 1694.00, 2323.00, 1560.00, 1625.00],
            [7002.67, 2379.00, 1759.00, 2379.00, 1616.00, 1686.00],
            [7007.00, 2379.00, 1794.00, 2418.00, 1655.00, 1725.00],
            [7327.67, 2500.00, 1911.00, 2526.00, 1764.00, 1837.00],
            [7332.00, 2539.00, 1911.00, 2531.00, 1768.00, 1837.00],
            [7423.00, 2574.00, 1946.00, 2561.00, 1798.00, 1872.00],
            [7427.33, 2578.00, 1985.00, 2600.00, 1837.00, 1911.00],
            [7856.33, 2743.00, 2145.00, 2752.00, 1985.00, 2063.00],
            [7860.67, 2782.00, 2145.00, 2752.00, 1989.00, 2067.00],
            [7869.33, 2786.00, 2149.00, 2756.00, 1989.00, 2071.00],
            [7873.67, 2786.00, 2188.00, 2795.00, 2032.00, 2110.00],
            [7990.67, 2834.00, 2232.00, 2838.00, 2071.00, 2154.00],
            [7995.00, 2834.00, 2236.00, 2838.00, 2076.00, 2154.00],
            [8341.67, 2968.00, 2366.00, 2960.00, 2197.00, 2279.00],
            [8346.00, 2973.00, 2409.00, 3003.00, 2240.00, 2323.00],
            [8419.67, 2999.00, 2435.00, 3033.00, 2266.00, 2353.00],
            [8424.00, 3046.00, 2440.00, 3033.00, 2271.00, 2353.00],
            [8844.33, 3211.00, 2596.00, 3185.00, 2422.00, 2509.00],
            [8848.67, 3211.00, 2643.00, 3228.00, 2466.00, 2557.00],
            [9017.67, 3280.00, 2708.00, 3293.00, 2526.00, 2617.00],
            [9022.00, 3324.00, 2708.00, 3293.00, 2531.00, 2622.00],
            [9182.33, 3389.00, 2773.00, 3350.00, 2587.00, 2678.00],
            [9186.67, 3393.00, 2773.00, 3354.00, 2591.00, 2682.00],
            [9373.00, 3467.00, 2847.00, 3423.00, 2656.00, 2752.00],
            [9377.33, 3467.00, 2895.00, 3471.00, 2704.00, 2799.00],
            [9650.33, 3575.00, 2999.00, 3571.00, 2808.00, 2903.00],
            [9654.67, 3627.00, 3003.00, 3571.00, 2808.00, 2903.00],
            [9728.33, 3657.00, 3029.00, 3601.00, 2834.00, 2934.00],
            [9732.67, 3657.00, 3033.00, 3601.00, 2838.00, 2934.00],
            [9936.33, 3757.00, 3111.00, 3675.00, 2912.00, 3012.00],
            [9940.67, 3757.00, 3163.00, 3727.00, 2964.00, 3064.00],
            [10317.67, 3935.00, 3311.00, 3870.00, 3107.00, 3207.00],
            [10322.00, 3991.00, 3315.00, 3870.00, 3107.00, 3211.00],
            [10534.33, 4091.00, 3397.00, 3952.00, 3185.00, 3293.00],
            [10538.67, 4095.00, 3454.00, 4004.00, 3241.00, 3345.00],
            [10790.00, 4216.00, 3553.00, 4099.00, 3337.00, 3445.00],
            [10794.33, 4216.00, 3553.00, 4104.00, 3337.00, 3445.00],
            [11028.33, 4329.00, 3649.00, 4190.00, 3428.00, 3536.00],
            [11032.67, 4385.00, 3649.00, 4195.00, 3428.00, 3540.00],
            [11167.00, 4450.00, 3705.00, 4242.00, 3480.00, 3592.00],
            [11171.33, 4455.00, 3761.00, 4303.00, 3536.00, 3649.00],
            [11245.00, 4489.00, 3792.00, 4329.00, 3566.00, 3679.00],
            [11249.33, 4494.00, 3792.00, 4333.00, 3566.00, 3679.00],
            [11492.00, 4611.00, 3909.00, 4442.00, 3679.00, 3792.00],
            [11496.33, 4611.00, 3909.00, 4446.00, 3679.00, 3796.00],
            [11782.33, 4749.00, 4047.00, 4576.00, 3809.00, 3926.00],
            [11786.67, 4810.00, 4047.00, 4576.00, 3813.00, 3930.00],
            [11834.33, 4836.00, 4069.00, 4598.00, 3835.00, 3952.00],
            [11838.67, 4836.00, 4134.00, 4658.00, 3896.00, 4013.00],
            [11856.00, 4845.00, 4138.00, 4667.00, 3904.00, 4021.00],
            [11860.33, 4849.00, 4143.00, 4671.00, 3904.00, 4026.00],
            [12545.00, 5183.00, 4472.00, 4983.00, 4221.00, 4346.00],
            [12549.33, 5187.00, 4537.00, 5048.00, 4286.00, 4411.00],
            [12558.00, 5191.00, 4541.00, 5053.00, 4290.00, 4416.00],
            [12562.33, 5191.00, 4541.00, 5057.00, 4290.00, 4416.00],
            [13299.00, 5551.00, 4901.00, 5399.00, 4632.00, 4767.00],
            [13303.33, 5555.00, 4966.00, 5469.00, 4702.00, 4836.00],
            [14308.67, 6049.00, 5460.00, 5941.00, 5174.00, 5317.00],
            [14313.00, 6049.00, 5464.00, 5941.00, 5178.00, 5321.00],
            [15825.33, 6912.00, 6205.00, 6652.00, 5889.00, 6045.00],
            [15829.67, 6916.00, 6205.00, 6656.00, 5889.00, 6049.00],
        ];
    }
}
